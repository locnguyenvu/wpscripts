#!/usr/bin/env bash

if [ -z $AWS_PROFILE ]; then
    echo "Please specify AWS_PROFILE"
    exit
fi

function listShardId() {
    local STREAMNAME=$1
    local AWSCOMMAND
    local SHARDIDS
    declare -a AWSCOMMAND
    AWSCOMMAND=( 'aws' 'kinesis' 'describe-stream' )
    AWSCOMMAND+=( '--stream-name' "$STREAMNAME" )

    SHARDIDS=$(eval "${AWSCOMMAND[@]}" | jq '.StreamDescription.Shards[].ShardId' | sed 's/"//g')
    if [ $(wc -l <<< "${SHARDIDS}") -eq 1 ]; then
        echo $SHARDIDS
    else
        echo $(fzf <<< $SHARDIDS)
    fi
}

getShardIterator() {
    local STREAMNAME=$1
    local SHARDID=$(listShardId $STREAMNAME)
    local AWSCOMMAND
    declare -a AWSCOMMAND
    AWSCOMMAND=( 'aws' 'kinesis' 'get-shard-iterator')
    AWSCOMMAND+=( '--stream-name' "${STREAMNAME}" )
    AWSCOMMAND+=( '--shard-id' "${SHARDID}" )

    shift
    local OPTIND
    getopts "t:" timestamp
    if [ "$timestamp" = "t" ]; then
        AWSCOMMAND+=( '--shard-iterator-type' 'AT_TIMESTAMP' '--timestamp' ${OPTARG} )
    else
        AWSCOMMAND+=( '--shard-iterator-type' 'LATEST' )
    fi
    echo $(eval "${AWSCOMMAND[@]}" | jq '.ShardIterator' | sed 's/"//g')
}


COMMAND=$1
shift
if [ "$COMMAND" = "get-message" ]; then
    STREAMNAME=$1
    shift
    if [ -z $STREAMNAME ]; then
        echo '
  Usage: `awsk get-message <stream-name>`'
        exit
    fi
    SHARDITERATOR=$(getShardIterator "$STREAMNAME" "$@")
    declare -a AWSCOMMAND
    AWSCOMMAND=( 'aws' 'kinesis' 'get-records' '--shard-iterator' "${SHARDITERATOR}" )

    eval "${AWSCOMMAND[@]}" >| /tmp/.awsk_get_message

    bat -l json --style plain,snip --color --theme OneHalfDark /tmp/.awsk_get_message
fi
